<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>Camunda Process Solution</name>
  <description>A process solution for Camunda Platform 8</description>
  <groupId>org.example.camunda.process.solution</groupId>
  <artifactId>camunda-lowcode-ui-solution</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.1.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <java.version>17</java.version>
    <spring-zeebe.version>8.5.3</spring-zeebe.version>
    <zeebe-test.version>8.5.3</zeebe-test.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda.spring</groupId>
      <artifactId>spring-boot-starter-camunda</artifactId>
      <version>${spring-zeebe.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <!-- required for JWT build in previous library -->
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.1</version>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>2.2.0</version>
   </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>camunda-tasklist-client-java</artifactId>
      <version>8.5.3.4</version>
    </dependency>

    <!-- gmail, drive, thymeleaf & feel -->
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>camunda-google-ws-java</artifactId>
      <version>1.3.4</version>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>jakarta.mail</artifactId>
      <version>1.6.7</version>
    </dependency>

    <!-- css generation with string replacement -->
	<dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.11.0</version>
    </dependency>
	<dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.10.0</version>
    </dependency>

    <!-- find workers to generate elt templates -->
	<dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.10.2</version>
	</dependency>

    <!-- h2 runtime -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Note: com.fasterxml.jackson.core.StreamReadConstraints was added in Jackson version 2.15.x -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- Google code format plugin -->
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.22.1</version>
        <executions>
          <execution>
            <?m2e execute onConfiguration,onIncremental?>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- use Java 17 dependencies if available -->
      <id>jdk17+</id>
      <activation>
          <jdk>[17,)</jdk>
      </activation>
      <dependencies>
        <dependency>
          <!-- see: https://docs.camunda.io/docs/components/best-practices/development/testing-process-definitions/#writing-process-tests-in-java -->
          <groupId>io.camunda</groupId>
          <artifactId>zeebe-process-test-extension</artifactId>
          <version>${zeebe-test.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <!-- see: https://github.com/camunda-community-hub/spring-zeebe#writing-test-cases -->
          <groupId>io.camunda</groupId>
          <artifactId>spring-zeebe-test</artifactId>
          <version>${zeebe-test.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!-- use alternative dependencies if Java 17 is not available -->
      <id>jdk8-16</id>
      <activation>
          <jdk>[8,17)</jdk>
      </activation>
      <dependencies>
        <dependency>
          <!-- see: https://github.com/camunda/zeebe-process-test#testcontainers-jdk-8 -->
          <groupId>io.camunda</groupId>
          <artifactId>zeebe-process-test-extension-testcontainer</artifactId>
          <version>${zeebe-test.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <!-- see: https://github.com/camunda-community-hub/spring-zeebe#writing-test-cases -->
          <groupId>io.camunda</groupId>
          <artifactId>spring-zeebe-test-testcontainer</artifactId>
          <version>${zeebe-test.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
